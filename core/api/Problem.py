from Task import TicketTask

class Problem:

    def __init__(self):
        self.task = TicketTask
        self.problem_body()

    def problem_body(self):
        self.id = 12 # ID Проблемы
        self.name = 'Информационная - 1111111111111111111' # Заголовок проблемы
        self.entities_id = 0 # Номер организации к которой отновится проблема
        self.is_recursive = 0 # Хз что это
        self.is_deleted = 0 # Логический флаг, указывающий, удалена ли проблема
        self.status = 2 # Статус проблемы
        self.content = '&#60;p&#62;аывфывааывваыывф&#60;/p&#62;' # Описание проблемы
        self.date_mod = '2025-02-12 12:47:42' # Дата и время последнего изменения проблемы
        self.date = '2025-02-04 14:50:05'# Дата заведения проблемы
        self.solvedate = None # Дата решения проблемы
        self.closedate = None # Дата закрытия проблемы
        self.time_to_resolve = '2025-02-06 16:55:17' # Время для решения проблемы по SLA
        self.users_id_recipient = 2 # Идентификатор пользователя (или группы пользователей) GLPI, которому назначена эта проблема на выполнение
        self.users_id_lastupdater = 2 # ID пользователя, который последний изменил проблему
        self.urgency = 3 # Срочность проблемы
        self.impact = 2 # Влияние проблемы
        self.priority = 2 # Приоритет проблемы
        self.itilcategories_id = 1 # ITIL категория
        self.impactcontent = ''
        self.causecontent = ''
        self.symptomcontent = ''
        self.actiontime = 0 # Общее время (в секундах), затраченное на выполнение каких-либо действий, связанных с заявкой (например, работа специалиста над заявкой)
        self.begin_waiting_date = None # Дата и время, когда проблемы была поставлена в состояние ожидания (например, когда требуется ответ от пользователя)
        self.waiting_duration = 46795 # Суммарное время (в секундах), в течение которого проблемы находилась в состоянии ожидания (независимо от того, связано ли это с SLA или OLA)
        self.close_delay_stat = 0 # Задержка в секундах между фактической датой закрытия проблемы и ожидаемой датой закрытия, рассчитанной на основе SLA или OLA
        self.solve_delay_stat = 0 # Задержка в секундах между фактической датой решения (например, когда проблема была устранена) и ожидаемой датой решения, рассчитанной на основе SLA или OLA
        self.date_creation = '2025-02-04 14:50:05' # Дата и время создания проблемы
        self.locations_id = 0 # Идентификатор местоположения (location), связанного с проблемой